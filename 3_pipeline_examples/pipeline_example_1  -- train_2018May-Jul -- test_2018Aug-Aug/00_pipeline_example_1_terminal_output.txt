/anaconda3/envs/simulation_tmle/bin/python /Users/lsjnancy/Desktop/Research/simulation_tmle/nygh_main_final.py
Would you like to pre-process your data? 1 for yes, 0 for no --> 0
Would you like to build LOS models (and simulate the system)? 1 for yes, 0 for no --> 1
Would you like to create rel_freq histograms and qq-plots? 1 for yes, 0 for no --> 1

Enter the filename of your CLEANED data in EXCEL format, for example: cleaned_data_all_final.xlsx --> cleaned_data_all_final.xlsx
====================================================================================================
Filename for cleaned data is: cleaned_data_all_final.xlsx
====================================================================================================
Is the above parameter correct? 1 for yes, 0 for no (If no, will reset and re-enter the information) --> 1

STEP 2: Train and Test DataFrame Split Inputs...
Enter the START (year, month) of training AND testing data, separated by comma, e.g., for May 2018, enter: 2018, 5 --> 2018, 5
Enter the END (year, month) of training AND testing data, separated by comma, e.g., for August 2018, enter: 2018, 8 --> 2018, 8
Enter the START (year, month) of TRAINING data, separated by comma, e.g., for May 2018, enter: 2018, 5 --> 2018, 5
Enter the END (year, month) of TRAINING data, separated by comma, e.g., for July 2018, enter: 2018, 7 --> 2018, 7
Enter the START (year, month) of TESTING data, separated by comma, e.g., for August 2018, enter: 2018, 8 --> 2018, 8
Enter the END (year, month) of TESTING data, separated by comma, e.g., for August 2018, enter: 2018, 8 --> 2018, 8
====================================================================================================
Range of all data (training and testing) -- start: 2018, 5; end: 2018, 8
Range of training data -- start: 2018, 5; end: 2018, 7
Range of testing data -- start: 2018, 8; end: 2018, 8
====================================================================================================
Are the above parameters correct? 1 for yes, 0 for no (If no, will reset and re-enter the information) --> 1


STEP 3: End-to-end Simulation Inputs...
System state 0: overall NIS, 1: NIS by Patient Type, 2: NIS by Zone, 3: NIS by Patient Type x Zone
Enter system state(s) you'd like to build LOS models and separate them by comma, for example: 0, 1 --> 0,1
Provide CATEGORICAL column names from cleaned data (x features used to train LOS model)...
For example: Age Category, Gender Code, Triage Category, Ambulance, Consult, Initial Zone, arrival_hour, arrival_day_of_week, arrival_week_number, arrival_month, holiday_CAN_ON
How many column names you'd like to add? 1 for one column, 2 for more than one columns --> 2
Enter column names separated by comma, for example: Age (Registration), Gender Code --> Age Category, Gender Code, Triage Category, Ambulance, Consult, Initial Zone, arrival_hour, arrival_day_of_week, arrival_week_number, arrival_month, holiday_CAN_ON
Current columns selected:  ['Age Category', 'Gender Code', 'Triage Category', 'Ambulance', 'Consult', 'Initial Zone', 'arrival_hour', 'arrival_day_of_week', 'arrival_week_number', 'arrival_month', 'holiday_CAN_ON']
Do you need to add more columns? Enter 0 for no, 1 for yes, 2 for reset --> 0

Provide CONTINUOUS column names (except for system state features) from cleaned data (x features and y feature to train the LOS model)...
For example: arrival_num_week_since_start, sojourn_time(minutes)
How many column names you'd like to add? 1 for one column, 2 for more than one columns --> 2
Enter column names separated by comma, for example: Age (Registration), Gender Code --> arrival_num_week_since_start, sojourn_time(minutes)
Current columns selected:  ['arrival_num_week_since_start', 'sojourn_time(minutes)']
Do you need to add more columns? Enter 0 for no, 1 for yes, 2 for reset --> 0

Interventions (% LOS cutdown for consult patients)...
Entering 1.0 means cut down by (1-1.0)*100% = 0% --> no intervention is applied
Entering 0.6 means cut down by (1-0.6)*100% = 40% --> intervention is applied, LOS of consult patient will be reduced by 40%
Enter interventions separated by comma, for example: 0.5, 1.0 --> 0.5,1.0

Do you want to take the log of LOS? 1 for yes, 0 for no --> 1
Do you want to simulate the system? 1 for yes, 0 for no --> 1
How many replications / runs would you like to simulate? For example, 30 --> 2
Do you want to compute the simulation performance measures? 1 for yes, 0 for no --> 1
====================================================================================================
System states selected:  [0, 1]
Categorical variables columns:  ['Age Category', 'Gender Code', 'Triage Category', 'Ambulance', 'Consult', 'Initial Zone', 'arrival_hour', 'arrival_day_of_week', 'arrival_week_number', 'arrival_month', 'holiday_CAN_ON']
Continuous variables columns:  ['arrival_num_week_since_start', 'sojourn_time(minutes)']
Inverventions selected:  [0.5, 1.0]
log(LOS) flag is: True, simulate flag is: True, performance measures flag is: True, number of simulation runs will be performed is: 2
====================================================================================================
Are the above parameters correct? 1 for yes, 0 for no (If no, will reset and re-enter the information) --> 1


Enter system state(s) you'd like to create rel_freq histograms and qq-plots for, separated them by comma, for example: 0, 1 --> 0,1
====================================================================================================
System states to create plots for are: [0, 1]
====================================================================================================
Is the above parameter correct? 1 for yes, 0 for no (If no, will reset and re-enter the information) --> 1


EXECUTING STEP 1...
Reading in data...


EXECUTING STEP 2...
Data from the same year...
Data from the same year...
Data from the same year...


EXECUTING STEP 3...
Getting x and y features with dummy variables for LOS model for T123 Admitted...
Getting x_train, y_train, x_test, y_test split for T123 Admitted...
x_train.shape, x_test.shape:  (3422, 110) (1160, 110)
y_train.shape, y_test.shape:  (3422, 1) (1160, 1)
Done: Getting x and y features with dummy variables for LOS model for T123 Admitted...
Building LOS model for T123 Admitted...
Done: Building LOS model for T123 Admitted...
Getting x and y features with dummy variables for LOS model for T123 Not Admitted...
Getting x_train, y_train, x_test, y_test split for T123 Not Admitted...
x_train.shape, x_test.shape:  (19281, 110) (6645, 110)
y_train.shape, y_test.shape:  (19281, 1) (6645, 1)
Done: Getting x and y features with dummy variables for LOS model for T123 Not Admitted...
Building LOS model for T123 Not Admitted...
Done: Building LOS model for T123 Not Admitted...
Getting x and y features with dummy variables for LOS model for T45...
Getting x_train, y_train, x_test, y_test split for T45...
x_train.shape, x_test.shape:  (6458, 110) (1939, 110)
y_train.shape, y_test.shape:  (6458, 1) (1939, 1)
Done: Getting x and y features with dummy variables for LOS model for T45...
Building LOS model for T45...
Done: Building LOS model for T45...

Simulation start...
Consult Patients shorten by 50.0 Percent, System State = 0, Total Runs = 2...

Running simulation run #: 1
arrival:  0
arrival:  1000
arrival:  2000
arrival:  3000
arrival:  4000
arrival:  5000
arrival:  6000
arrival:  7000
arrival:  8000
arrival:  9000

Running simulation run #: 2
arrival:  0
arrival:  1000
arrival:  2000
arrival:  3000
arrival:  4000
arrival:  5000
arrival:  6000
arrival:  7000
arrival:  8000
arrival:  9000
Total time to run simulation for this cutdown percentage (2 runs): 235.297 seconds
Consult Patients shorten by 0.0 Percent, System State = 0, Total Runs = 2...

Running simulation run #: 1
arrival:  0
arrival:  1000
arrival:  2000
arrival:  3000
arrival:  4000
arrival:  5000
arrival:  6000
arrival:  7000
arrival:  8000
arrival:  9000

Running simulation run #: 2
arrival:  0
arrival:  1000
arrival:  2000
arrival:  3000
arrival:  4000
arrival:  5000
arrival:  6000
arrival:  7000
arrival:  8000
arrival:  9000
Calculating Simulated LOS...
Total time to run simulation for this cutdown percentage (2 runs): 222.049 seconds
Getting x and y features with dummy variables for LOS model for T123 Admitted...
Getting x_train, y_train, x_test, y_test split for T123 Admitted...
x_train.shape, x_test.shape:  (3422, 112) (1160, 112)
y_train.shape, y_test.shape:  (3422, 1) (1160, 1)
Done: Getting x and y features with dummy variables for LOS model for T123 Admitted...
Building LOS model for T123 Admitted...
Done: Building LOS model for T123 Admitted...
Getting x and y features with dummy variables for LOS model for T123 Not Admitted...
Getting x_train, y_train, x_test, y_test split for T123 Not Admitted...
x_train.shape, x_test.shape:  (19281, 112) (6645, 112)
y_train.shape, y_test.shape:  (19281, 1) (6645, 1)
Done: Getting x and y features with dummy variables for LOS model for T123 Not Admitted...
Building LOS model for T123 Not Admitted...
Done: Building LOS model for T123 Not Admitted...
Getting x and y features with dummy variables for LOS model for T45...
Getting x_train, y_train, x_test, y_test split for T45...
x_train.shape, x_test.shape:  (6458, 112) (1939, 112)
y_train.shape, y_test.shape:  (6458, 1) (1939, 1)
Done: Getting x and y features with dummy variables for LOS model for T45...
Building LOS model for T45...
Done: Building LOS model for T45...

Simulation start...
Consult Patients shorten by 50.0 Percent, System State = 1, Total Runs = 2...

Running simulation run #: 1
arrival:  0
arrival:  1000
arrival:  2000
arrival:  3000
arrival:  4000
arrival:  5000
arrival:  6000
arrival:  7000
arrival:  8000
arrival:  9000

Running simulation run #: 2
arrival:  0
arrival:  1000
arrival:  2000
arrival:  3000
arrival:  4000
arrival:  5000
arrival:  6000
arrival:  7000
arrival:  8000
arrival:  9000
Total time to run simulation for this cutdown percentage (2 runs): 216.018 seconds
Consult Patients shorten by 0.0 Percent, System State = 1, Total Runs = 2...

Running simulation run #: 1
arrival:  0
arrival:  1000
arrival:  2000
arrival:  3000
arrival:  4000
arrival:  5000
arrival:  6000
arrival:  7000
arrival:  8000
arrival:  9000

Running simulation run #: 2
arrival:  0
arrival:  1000
arrival:  2000
arrival:  3000
arrival:  4000
arrival:  5000
arrival:  6000
arrival:  7000
arrival:  8000
arrival:  9000
Calculating Simulated LOS...
Total time to run simulation for this cutdown percentage (2 runs): 212.469 seconds

Naive interventions on actual patient LOS data...
Consult Patients shorten by 50.0 Percent
Consult Patients shorten by 0.0 Percent
Saving results...
['System State', 'nPatients [T123A, T123NA, T45]', 'nConsultPatients [T123A, T123NA, T45]', 'percentConsult [T123A, T123NA, T45]', 'nRuns', 'Cut Down by (%)', 'RMSE [T123A, T123NA, T45]', 'Mean [T123A, T123NA, T45]', 'Median [T123A, T123NA, T45]', 'Stdev [T123A, T123NA, T45]', 'CI on Mean [T123A, T123NA, T45]', '90th Percentile [T123A, T123NA, T45]', 'Time to Run (seconds)']
[[0 list([1160, 6645, 1939]) list([1104, 351, 24]) list([95.2, 5.3, 1.2])
  2 50.0 list([167.38, 139.6, 70.26]) list([307.91, 208.81, 114.74])
  list([279.42, 178.17, 101.63]) list([10.07, 0.64, 1.23])
  list([(293.95, 321.87), (207.92, 209.7), (113.04, 116.44)])
  list([534.76, 369.08, 191.06]) 235.297]
 [0 list([1160, 6645, 1939]) list([1104, 351, 24]) list([95.2, 5.3, 1.2])
  2 0.0 list([330.58, 164.52, 87.43]) list([600.52, 231.55, 129.82])
  list([541.63, 192.5, 112.4]) list([19.52, 0.62, 1.97])
  list([(573.47, 627.57), (230.69, 232.41), (127.09, 132.55)])
  list([1047.71, 416.36, 216.29]) 222.049]]
['System State', 'nPatients [T123A, T123NA, T45]', 'nConsultPatients [T123A, T123NA, T45]', 'percentConsult [T123A, T123NA, T45]', 'nRuns', 'Cut Down by (%)', 'RMSE [T123A, T123NA, T45]', 'Mean [T123A, T123NA, T45]', 'Median [T123A, T123NA, T45]', 'Stdev [T123A, T123NA, T45]', 'CI on Mean [T123A, T123NA, T45]', '90th Percentile [T123A, T123NA, T45]', 'Time to Run (seconds)']
[[1 list([1160, 6645, 1939]) list([1104, 351, 24]) list([95.2, 5.3, 1.2])
  2 50.0 list([156.32, 139.57, 75.26]) list([291.45, 214.59, 124.26])
  list([261.87, 184.58, 110.1]) list([9.61, 0.12, 0.86])
  list([(278.13, 304.77), (214.42, 214.76), (123.07, 125.45)])
  list([507.21, 377.4, 208.51]) 216.018]
 [1 list([1160, 6645, 1939]) list([1104, 351, 24]) list([95.2, 5.3, 1.2])
  2 0.0 list([316.48, 162.15, 88.6]) list([586.6, 232.29, 131.36])
  list([530.67, 194.36, 113.95]) list([22.38, 0.34, 1.12])
  list([(555.58, 617.62), (231.82, 232.76), (129.81, 132.91)])
  list([1026.38, 416.06, 219.29]) 212.469]]


EXECUTING STEP 4...
Transforming naive + simulation results...
mean_with_stderr
median
90th_percentile


EXECUTING STEP 5...
Processing actual LOS files...
LOS_Dist_Actual_Patient_Type=T123A.csv
LOS_Dist_Actual_Patient_Type=T123NA.csv
LOS_Dist_Actual_Patient_Type=T45.csv

Processing simulated LOS for T123 Admitted...
LOS_Data_Simulated_System_State=0.xlsx T123A
LOS_Data_Simulated_System_State=1.xlsx T123A
Plotting simulated LOS distribution(s) and conducting Kolmogorov–Smirnov test(s) for T123 Admitted...
Kolmogorov–Smirnov test (Simulated: General NIS):  
ks stat=0.05344827586206897, ks crit val=0.04890525675150918, ks pval=0.023804055697051685
Kolmogorov–Smirnov test (Simulated: NIS by Patient Type):  
ks stat=0.06724137931034482, ks crit val=0.04890525675150918, ks pval=0.0018032800328041665
Plotting Q-Q plot(s) for T123 Admitted...

Processing simulated LOS for T123 Not Admitted...
LOS_Data_Simulated_System_State=0.xlsx T123NA
LOS_Data_Simulated_System_State=1.xlsx T123NA
Plotting simulated LOS distribution(s) and conducting Kolmogorov–Smirnov test(s) for T123 Not Admitted...
Kolmogorov–Smirnov test (Simulated: General NIS):  
ks stat=0.03694507148231753, ks crit val=0.020433231022590953, ks pval=1.0887337802733777e-05
Kolmogorov–Smirnov test (Simulated: NIS by Patient Type):  
ks stat=0.04311512415349886, ks crit val=0.020433231022590953, ks pval=1.3586917519502974e-07
Plotting Q-Q plot(s) for T123 Not Admitted...

Processing simulated LOS for T45...
LOS_Data_Simulated_System_State=0.xlsx T45
LOS_Data_Simulated_System_State=1.xlsx T45
Plotting simulated LOS distribution(s) and conducting Kolmogorov–Smirnov test(s) for T45...
Kolmogorov–Smirnov test (Simulated: General NIS):  
ks stat=0.04151624548736462, ks crit val=0.037826454228554116, ks pval=0.02299137500903503
Kolmogorov–Smirnov test (Simulated: NIS by Patient Type):  
ks stat=0.03378029912325941, ks crit val=0.037826454228554116, ks pval=0.10386491007240817
Plotting Q-Q plot(s) for T45...
Saving KS-test results...

Process finished with exit code 0
